{"id":82,"date":"2024-08-30T16:10:47","date_gmt":"2024-08-30T16:10:47","guid":{"rendered":"https:\/\/offline.local\/?p=82"},"modified":"2024-08-30T16:49:49","modified_gmt":"2024-08-30T16:49:49","slug":"gomoku","status":"publish","type":"post","link":"https:\/\/offline.local\/gomoku\/","title":{"rendered":"gomoku"},"content":{"rendered":"\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Gomoku Game<\/title>\n    <style>\nhtml, body {\n    margin: 0;\n    padding: 0;\n    height: 100%;\n    width: 100%;\n    background-color: transparent;\n}\n\n.game-wrapper {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100%;\n    width: 100%;\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    background-color: transparent;\n}\n\n.game-container {\n    position: relative;\n    width: 100%;\n    height: 100%;\n    max-width: 83vmin;\n    max-height: 83vmin;\n    aspect-ratio: 1 \/ 1;\n    background-color: transparent;\n}\n\n#board {\n    display: grid;\n    grid-template-columns: repeat(15, 1fr);\n    grid-template-rows: repeat(15, 1fr);\n    gap: 0;\n    width: 100%;\n    height: 100%;\n    background-color: #dcb35c;\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n    position: relative;\n    border: 2px solid #000;\n    aspect-ratio: 1 \/ 1;\n}\n\n@media (max-width: 680px) {\n    .game-container {\n        max-width: 100vw;\n        max-height: 100vw;\n    }\n}\n\n.cell {\n    position: relative;\n    cursor: pointer;\n}\n\n.cell::before,\n.cell::after {\n    content: '';\n    position: absolute;\n    background-color: black;\n    z-index: 1;\n}\n\n.cell::before {\n    left: 50%;\n    top: 0;\n    bottom: 0;\n    width: 1px;\n}\n\n.cell::after {\n    top: 50%;\n    left: 0;\n    right: 0;\n    height: 1px;\n}\n\n.stone {\n    position: absolute;\n    width: 90%;\n    height: 90%;\n    border-radius: 50%;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    z-index: 3;\n    outline: none;\n    -webkit-tap-highlight-color: transparent;\n}\n\n.stone.black {\n    background-color: #000!important;\n    box-shadow: 0 0 5px rgba(0, 0, 0, 0.5) !important;\n}\n\n.stone.white {\n    background-color: #fff!important;\n    box-shadow: 0 0 5px rgba(0, 0, 0, 0.3) !important;\n}\n\n.cell.last-move .stone {\n    box-shadow: 0 0 10px 2px #ffff00 !important;\n}\n\n.cell.winning-move .stone {\n    box-shadow: 0 0 10px 3px #ffff00 !important;\n}\n\n* {\n    -webkit-tap-highlight-color: transparent;\n}\n\n#message {\n    position: absolute;\n    top: 10px;\n    left: 0;\n    right: 0;\n    text-align: center;\n    z-index: 5;\n    font-size: 22px;\n    color: #fff;\n}\n\n#start, #restart, #computerFirst, #meFirst {\n    position: absolute;\n    padding: 10px 20px;\n    font-size: 18px;\n    cursor: pointer;\n    background-color: rgba(76, 175, 80, 0.6);\n    color: white;\n    border: none;\n    border-radius: 5px;\n    transition: background-color 0.3s;\n    z-index: 10;\n}\n\n#start:hover, #restart:hover, #computerFirst:hover, #meFirst:hover {\n    background-color: rgba(69, 160, 73, 0.6);\n}\n\n#start, #restart {\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n}\n\n#computerFirst, #meFirst {\n    width: 200px;\n}\n\n#computerFirst {\n    top: calc(50% - 30px);\n    left: 50%;\n    transform: translate(-50%, -50%);\n}\n\n#meFirst {\n    top: calc(50% + 30px);\n    left: 50%;\n    transform: translate(-50%, -50%);\n}\n\n#restart {\n    display: none;\n}\n\n.dot {\n    position: absolute;\n    width: 15%;\n    height: 15%;\n    background-color: #000;\n    border-radius: 50%;\n    top: 51%;\n    left: 51%;\n    transform: translate(-50%, -50%);\n    z-index: 2;\n}\n\n#whoFirst {\n    position: absolute;\n    top: calc(50% - 70px);\n    left: 50%;\n    transform: translate(-50%, -50%);\n    font-size: 24px;\n    color: white;\n    text-align: center;\n    z-index: 10;\n}\n\n#startScreen {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(0, 0, 0, 0.7);\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    z-index: 20;\n}\n    <\/style>\n<\/head>\n<body style=\"background-color: transparent;\">\n    <div class=\"game-wrapper\">\n        <div class=\"game-container\">\n            <div id=\"board\"><\/div>\n            <div id=\"startScreen\">\n                <div id=\"whoFirst\">Who&#8217;s first?<\/div>\n                <button id=\"computerFirst\">Computer (Expert)<\/button>\n                <button id=\"meFirst\">Me (trainee)<\/button>\n            <\/div>\n            <button id=\"restart\">RESTART<\/button>\n            <div id=\"message\"><\/div>\n        <\/div>\n    <\/div>\n    <script>\n\/\/ \uc804\uc5ed \ubcc0\uc218\nconst boardSize = 15;\nconst dotPositions = [];\nlet board = Array(boardSize).fill(null).map(() => Array(boardSize).fill(null));\nlet gameOver = false;\nlet currentPlayer = 'P';\nlet lastMove = null;\n\nconst boardElement = document.getElementById('board');\nconst messageElement = document.getElementById('message');\nconst restartButton = document.getElementById('restart');\nconst startScreen = document.getElementById('startScreen');\nconst computerFirstButton = document.getElementById('computerFirst');\nconst meFirstButton = document.getElementById('meFirst');\n\n\/\/ \ubcf4\ub4dc \uc0dd\uc131 \ubc0f \ucd08\uae30\ud654\nfunction createBoard() {\n    boardElement.innerHTML = '';\n    for (let row = 0; row < boardSize; row++) {\n        for (let col = 0; col < boardSize; col++) {\n            const cell = document.createElement('div');\n            cell.className = 'cell';\n            cell.dataset.row = row;\n            cell.dataset.col = col;\n            cell.addEventListener('click', onCellClick);\n            boardElement.appendChild(cell);\n        }\n    }\n    addDotsToBoard();\n}\n\nfunction addDotsToBoard() {\n    dotPositions.forEach(position => {\n        const cell = boardElement.children[position - 1];\n        if (cell) {\n            const dot = document.createElement('div');\n            dot.className = 'dot';\n            cell.appendChild(dot);\n        }\n    });\n}\n\n\/\/ \uac8c\uc784 \ub85c\uc9c1\nfunction onCellClick(event) {\n    const row = parseInt(event.target.dataset.row);\n    const col = parseInt(event.target.dataset.col);\n\n    if (!board[row][col] && !gameOver && currentPlayer === 'P') {\n        makeMove(row, col);\n    }\n}\n\nfunction makeMove(row, col) {\n    board[row][col] = currentPlayer;\n    const cell = document.querySelector(`[data-row=\"${row}\"][data-col=\"${col}\"]`);\n    const stone = document.createElement('div');\n    stone.className = `stone ${currentPlayer === 'P' ? 'black' : 'white'}`;\n    stone.style.setProperty('background-color', currentPlayer === 'P' ? '#000' : '#fff', 'important');\n    cell.appendChild(stone);\n\n    if (lastMove && !gameOver) {\n        const lastCell = document.querySelector(`[data-row=\"${lastMove.row}\"][data-col=\"${lastMove.col}\"]`);\n        lastCell.classList.remove('last-move');\n    }\n\n    cell.classList.add('last-move');\n    lastMove = { row, col };\n\n    const winningCells = checkWinner(row, col, currentPlayer);\n    if (winningCells) {\n        highlightWinningCells(winningCells);\n        endGame(`${currentPlayer === 'P' ? 'User' : 'Computer'} wins!`);\n        return;\n    }\n\n    currentPlayer = currentPlayer === 'P' ? 'C' : 'P';\n\n    if (currentPlayer === 'C') {\n        setTimeout(computerMove, 500);\n    }\n}\n\n\/\/ AI \ub85c\uc9c1\nfunction computerMove() {\n    if (gameOver) return;\n\n    let bestMove = null;\n\n    \/\/ \uc911\uc559\uc5d0\uc11c \uc2dc\uc791\ud558\ub294 \uccab \ubc88\uc9f8 \uc6c0\uc9c1\uc784 \ub85c\uc9c1\n    if (lastMove === null) {\n        const center = Math.floor(boardSize \/ 2);\n        bestMove = { row: center, col: center };\n    } else {\n        bestMove = getBestMove();\n    }\n\n    if (bestMove) {\n        makeMove(bestMove.row, bestMove.col);\n    }\n}\n\nfunction evaluateMove(row, col, player) {\n    let score = 0;\n    const directions = [\n        { x: 1, y: 0 }, { x: 0, y: 1 }, { x: 1, y: 1 }, { x: 1, y: -1 }\n    ];\n\n    for (const { x, y } of directions) {\n        let count = 1;\n        let open = 0;\n        let blocked = 0;\n\n        for (let i = 1; i < 6; i++) {\n            const newRow = row + i * y;\n            const newCol = col + i * x;\n            if (newRow < 0 || newRow >= boardSize || newCol < 0 || newCol >= boardSize) {\n                blocked++;\n                break;\n            }\n            if (board[newRow][newCol] === player) count++;\n            else if (board[newRow][newCol] === null) {\n                open++;\n                break;\n            } else {\n                blocked++;\n                break;\n            }\n        }\n\n        for (let i = 1; i < 6; i++) {\n            const newRow = row - i * y;\n            const newCol = col - i * x;\n            if (newRow < 0 || newRow >= boardSize || newCol < 0 || newCol >= boardSize) {\n                blocked++;\n                break;\n            }\n            if (board[newRow][newCol] === player) count++;\n            else if (board[newRow][newCol] === null) {\n                open++;\n                break;\n            } else {\n                blocked++;\n                break;\n            }\n        }\n\n        if (count >= 5) score += 1000000;\n        else if (count === 4 && open === 2) score += 500000;\n        else if (count === 4 && open === 1) score += 100000;\n        else if (count === 3 && open === 2) score += 50000;\n        else if (count === 3 && open === 1) score += 10000;\n        else if (count === 2 && open === 2) score += 5000;\n        else if (count === 2 && open === 1) score += 1000;\n        else if (count === 1 && open === 2) score += 500;\n\n        \/\/ Defensive scoring\n        if (player === 'P') {\n            if (count === 4 && open === 1) score += 90000;\n            else if (count === 3 && open === 2) score += 40000;\n        }\n    }\n\n    return score;\n}\n\nfunction getBestMove() {\n    let bestMove = null;\n    let maxScore = -Infinity;\n\n    for (let row = 0; row < boardSize; row++) {\n        for (let col = 0; col < boardSize; col++) {\n            if (!board[row][col]) {\n                let attackScore = evaluateMove(row, col, 'C');\n                let defenseScore = evaluateMove(row, col, 'P');\n\n                let score = attackScore + defenseScore * 0.9;\n\n                if (score > maxScore) {\n                    maxScore = score;\n                    bestMove = { row, col };\n                }\n            }\n        }\n    }\n\n    return bestMove;\n}\n\n\/\/ \uc2b9\ub9ac \ud655\uc778\nfunction checkWinner(row, col, player) {\n    const directions = [\n        { x: 1, y: 0 }, { x: 0, y: 1 }, { x: 1, y: 1 }, { x: 1, y: -1 }\n    ];\n\n    for (const { x, y } of directions) {\n        let count = 1;\n        let cells = [{ row, col }];\n\n        for (let i = 1; i < 5; i++) {\n            const newRow = row + i * y;\n            const newCol = col + i * x;\n            if (newRow < 0 || newRow >= boardSize || newCol < 0 || newCol >= boardSize || board[newRow][newCol] !== player) {\n                break;\n            }\n            count++;\n            cells.push({ row: newRow, col: newCol });\n        }\n\n        for (let i = 1; i < 5; i++) {\n            const newRow = row - i * y;\n            const newCol = col - i * x;\n            if (newRow < 0 || newRow >= boardSize || newCol < 0 || newCol >= boardSize || board[newRow][newCol] !== player) {\n                break;\n            }\n            count++;\n            cells.push({ row: newRow, col: newCol });\n        }\n\n        if (count >= 5) {\n            return cells;\n        }\n    }\n    return null;\n}\n\n\/\/ UI \uc5c5\ub370\uc774\ud2b8\nfunction highlightWinningCells(cells) {\n    cells.forEach(({ row, col }) => {\n        const cell = document.querySelector(`[data-row=\"${row}\"][data-col=\"${col}\"]`);\n        cell.classList.add('winning-move');\n    });\n}\n\nfunction endGame(message) {\n    gameOver = true;\n    messageElement.textContent = message;\n    restartButton.style.display = 'block';\n}\n\n\/\/ \uac8c\uc784 \uc7ac\uc2dc\uc791\nfunction restartGame() {\n    board = Array(boardSize).fill(null).map(() => Array(boardSize).fill(null));\n    gameOver = false;\n    lastMove = null;\n    messageElement.textContent = '';\n    restartButton.style.display = 'none';\n    startScreen.style.display = 'flex';\n    boardElement.style.display = 'none';\n    createBoard();\n}\n\nfunction updateStoneColors() {\n    document.querySelectorAll('.stone').forEach(stone => {\n        if (stone.classList.contains('black')) {\n            stone.style.setProperty('background-color', '#000', 'important');\n        } else if (stone.classList.contains('white')) {\n            stone.style.setProperty('background-color', '#fff', 'important');\n        }\n    });\n}\n\nfunction detectColorSchemeChange() {\n    const observer = new MutationObserver((mutations) => {\n        mutations.forEach((mutation) => {\n            if (mutation.type === 'attributes' && mutation.attributeName === 'class') {\n                updateStoneColors();\n            }\n        });\n    });\n\n    observer.observe(document.body, {\n        attributes: true,\n        attributeFilter: ['class']\n    });\n}\n\nfunction startColorUpdateInterval() {\n    setInterval(updateStoneColors, 100); \/\/ 100ms\ub9c8\ub2e4 \uc0c9\uc0c1 \uc5c5\ub370\uc774\ud2b8\n}\n\n\/\/ \uac8c\uc784 \uc2dc\uc791\nfunction startGame(firstPlayer) {\n    currentPlayer = firstPlayer;\n    startScreen.style.display = 'none';\n    boardElement.style.display = 'grid';\n    createBoard();\n    detectColorSchemeChange();\n    startColorUpdateInterval();\n\n    if (currentPlayer === 'C') {\n        setTimeout(computerMove, 500);\n    }\n}\n\n\/\/ \uc774\ubca4\ud2b8 \ub9ac\uc2a4\ub108\nrestartButton.addEventListener('click', restartGame);\ncomputerFirstButton.addEventListener('click', () => startGame('C'));\nmeFirstButton.addEventListener('click', () => startGame('P'));\n\n\/\/ \ucd08\uae30 \uc124\uc815\ncreateBoard();\nboardElement.style.display = 'none';\nstartScreen.style.display = 'flex';\n    <\/script>\n<\/body>\n<\/html>\n\n\n\n\n<div style=\"height:54px\" aria-hidden=\"true\" class=\"wp-block-spacer\"><\/div>\n\n\n\n<p>Our first project is Gomoku.<\/p>\n\n\n\n<p>Just complete 5 stones first, regardless of horizontal, vertical, or diagonal.<\/p>\n","protected":false},"excerpt":{"rendered":"<p>Gomoku Game Who&#8217;s first? Computer (Expert) Me (trainee) RESTART Our first project is Gomoku. Just complete 5 stones first, regardless of horizontal, vertical, or diagonal.<\/p>\n","protected":false},"author":1,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":{"ocean_post_layout":"","ocean_both_sidebars_style":"","ocean_both_sidebars_content_width":0,"ocean_both_sidebars_sidebars_width":0,"ocean_sidebar":"","ocean_second_sidebar":"","ocean_disable_margins":"enable","ocean_add_body_class":"","ocean_shortcode_before_top_bar":"","ocean_shortcode_after_top_bar":"","ocean_shortcode_before_header":"","ocean_shortcode_after_header":"","ocean_has_shortcode":"","ocean_shortcode_after_title":"","ocean_shortcode_before_footer_widgets":"","ocean_shortcode_after_footer_widgets":"","ocean_shortcode_before_footer_bottom":"","ocean_shortcode_after_footer_bottom":"","ocean_display_top_bar":"default","ocean_display_header":"default","ocean_header_style":"","ocean_center_header_left_menu":"","ocean_custom_header_template":"","ocean_custom_logo":0,"ocean_custom_retina_logo":0,"ocean_custom_logo_max_width":0,"ocean_custom_logo_tablet_max_width":0,"ocean_custom_logo_mobile_max_width":0,"ocean_custom_logo_max_height":0,"ocean_custom_logo_tablet_max_height":0,"ocean_custom_logo_mobile_max_height":0,"ocean_header_custom_menu":"","ocean_menu_typo_font_family":"","ocean_menu_typo_font_subset":"","ocean_menu_typo_font_size":0,"ocean_menu_typo_font_size_tablet":0,"ocean_menu_typo_font_size_mobile":0,"ocean_menu_typo_font_size_unit":"px","ocean_menu_typo_font_weight":"","ocean_menu_typo_font_weight_tablet":"","ocean_menu_typo_font_weight_mobile":"","ocean_menu_typo_transform":"","ocean_menu_typo_transform_tablet":"","ocean_menu_typo_transform_mobile":"","ocean_menu_typo_line_height":0,"ocean_menu_typo_line_height_tablet":0,"ocean_menu_typo_line_height_mobile":0,"ocean_menu_typo_line_height_unit":"","ocean_menu_typo_spacing":0,"ocean_menu_typo_spacing_tablet":0,"ocean_menu_typo_spacing_mobile":0,"ocean_menu_typo_spacing_unit":"","ocean_menu_link_color":"","ocean_menu_link_color_hover":"","ocean_menu_link_color_active":"","ocean_menu_link_background":"","ocean_menu_link_hover_background":"","ocean_menu_link_active_background":"","ocean_menu_social_links_bg":"","ocean_menu_social_hover_links_bg":"","ocean_menu_social_links_color":"","ocean_menu_social_hover_links_color":"","ocean_disable_title":"default","ocean_disable_heading":"default","ocean_post_title":"","ocean_post_subheading":"","ocean_post_title_style":"","ocean_post_title_background_color":"","ocean_post_title_background":0,"ocean_post_title_bg_image_position":"","ocean_post_title_bg_image_attachment":"","ocean_post_title_bg_image_repeat":"","ocean_post_title_bg_image_size":"","ocean_post_title_height":0,"ocean_post_title_bg_overlay":0.5,"ocean_post_title_bg_overlay_color":"","ocean_disable_breadcrumbs":"default","ocean_breadcrumbs_color":"","ocean_breadcrumbs_separator_color":"","ocean_breadcrumbs_links_color":"","ocean_breadcrumbs_links_hover_color":"","ocean_display_footer_widgets":"default","ocean_display_footer_bottom":"default","ocean_custom_footer_template":"","osp_disable_panel":"default","ocean_post_oembed":"","ocean_post_self_hosted_media":"","ocean_post_video_embed":"","ocean_link_format":"","ocean_link_format_target":"self","ocean_quote_format":"","ocean_quote_format_link":"post","ocean_gallery_link_images":"on","ocean_gallery_id":[],"footnotes":""},"categories":[12],"tags":[],"class_list":["post-82","post","type-post","status-publish","format-standard","hentry","category-offline-project","entry"],"_links":{"self":[{"href":"https:\/\/offline.local\/wp-json\/wp\/v2\/posts\/82"}],"collection":[{"href":"https:\/\/offline.local\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/offline.local\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/offline.local\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/offline.local\/wp-json\/wp\/v2\/comments?post=82"}],"version-history":[{"count":2,"href":"https:\/\/offline.local\/wp-json\/wp\/v2\/posts\/82\/revisions"}],"predecessor-version":[{"id":104,"href":"https:\/\/offline.local\/wp-json\/wp\/v2\/posts\/82\/revisions\/104"}],"wp:attachment":[{"href":"https:\/\/offline.local\/wp-json\/wp\/v2\/media?parent=82"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/offline.local\/wp-json\/wp\/v2\/categories?post=82"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/offline.local\/wp-json\/wp\/v2\/tags?post=82"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}